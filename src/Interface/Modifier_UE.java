/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Entities.Ecue;
import database.EcueDAO;
import database.UesDAO;
import java.awt.Cursor;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Carlos SMY
 */
public class Modifier_UE extends javax.swing.JPanel {

    /**
     * Creates new form Modifier_UE
     */
    Ecue ec;
    
    public Modifier_UE() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        update = new javax.swing.JButton();
        deleteEcue = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        modifierEcue = new javax.swing.JButton();
        AjouterEcue = new javax.swing.JButton();

        setBackground(new java.awt.Color(152, 0, 1));

        update.setBackground(new java.awt.Color(52, 1, 152));
        update.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("Modifier");
        update.setToolTipText("Modifier une UE");
        update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updateMouseExited(evt);
            }
        });
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        deleteEcue.setBackground(new java.awt.Color(52, 1, 152));
        deleteEcue.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        deleteEcue.setForeground(new java.awt.Color(255, 255, 255));
        deleteEcue.setText("Supprimer Ecue");
        deleteEcue.setToolTipText("Supprimer une Ecue a l'interieur de l'UE");
        deleteEcue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteEcueMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteEcueMouseExited(evt);
            }
        });
        deleteEcue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEcueActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(52, 1, 152));
        delete.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Supprimer");
        delete.setToolTipText("Supprimer une UE");
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteMouseExited(evt);
            }
        });
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        modifierEcue.setBackground(new java.awt.Color(52, 1, 152));
        modifierEcue.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        modifierEcue.setForeground(new java.awt.Color(255, 255, 255));
        modifierEcue.setText("Modifier Ecue");
        modifierEcue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                modifierEcueMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                modifierEcueMouseExited(evt);
            }
        });
        modifierEcue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierEcueActionPerformed(evt);
            }
        });

        AjouterEcue.setBackground(new java.awt.Color(52, 1, 152));
        AjouterEcue.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        AjouterEcue.setForeground(new java.awt.Color(255, 255, 255));
        AjouterEcue.setText("Ajouter Ecue");
        AjouterEcue.setToolTipText("Ajouter une Ecue a l'interieur de l'Ecue");
        AjouterEcue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AjouterEcueMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AjouterEcueMouseExited(evt);
            }
        });
        AjouterEcue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjouterEcueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deleteEcue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(modifierEcue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AjouterEcue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(122, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(AjouterEcue, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(modifierEcue, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteEcue, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
         
        Accueil.card.show(Chaque_UE.cardPanel,"modifier");
       
    }//GEN-LAST:event_updateActionPerformed

    private void deleteEcueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEcueActionPerformed
        // TODO add your handling code here:
        try{
            if(Chaque_UE.del==null)
              JOptionPane.showMessageDialog(this,"Veuillez choisir une ecue a supprimer","Erreur",0);  
            else{ 
             int i=JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer cet Ecue", "Confirmation", 0);
             if(i==0){
                EcueDAO dao = new EcueDAO();
                 dao.delete(Chaque_UE.del);
            JOptionPane.showMessageDialog(this,"Ecue bien supprimée","Suppression réussie", HEIGHT);
             }
            }
                
            
        }catch(SQLException e){
        e.printStackTrace();
    }
      

    }//GEN-LAST:event_deleteEcueActionPerformed

    private void updateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseEntered
        // TODO add your handling code here:
         this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_updateMouseEntered

    private void deleteEcueMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteEcueMouseEntered
        // TODO add your handling code here:
         this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_deleteEcueMouseEntered

    private void deleteEcueMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteEcueMouseExited
        // TODO add your handling code here:
         this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_deleteEcueMouseExited

    private void updateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseExited
        // TODO add your handling code here:
         this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_updateMouseExited

    private void deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseEntered
        // TODO add your handling code here:
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_deleteMouseEntered

    private void deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseExited
        // TODO add your handling code here:
         this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_deleteMouseExited

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
          UesDAO dao = new UesDAO();
        try {
            int i=JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer l'UE","Suppression",0,1);
            if(i==0){
            dao.deleteAllEcue(Panneau_UE.del);
            dao.delete(Chaque_UE.copie); 
            JOptionPane.showMessageDialog(this,"UE bien supprimée");
            Panneau_UE.refresh();
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Modifier_Etudiant.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void modifierEcueMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifierEcueMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_modifierEcueMouseEntered

    private void modifierEcueMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifierEcueMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_modifierEcueMouseExited

    private void modifierEcueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierEcueActionPerformed
        // TODO add your handling code here:
        try{
            if(Chaque_UE.del==null)
             JOptionPane.showMessageDialog(this, "Veuillez choisir un ecue","Erreur",0);
            else{
              Ajouter_UE edd = new Ajouter_UE(Chaque_UE.del);
            Chaque_UE.cardPanel.add(edd,"modifierecue");
            Accueil.card.show(Chaque_UE.cardPanel, "modifierecue");
            }
        }catch(SQLException e){
        e.printStackTrace();
    }
    }//GEN-LAST:event_modifierEcueActionPerformed

    private void AjouterEcueMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AjouterEcueMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_AjouterEcueMouseEntered

    private void AjouterEcueMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AjouterEcueMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_AjouterEcueMouseExited

    private void AjouterEcueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjouterEcueActionPerformed
        // TODO add your handling code here:
        Ecue ec = new Ecue("", "", 0, Chaque_UE.copie);
           try{
              Ajouter_UE edd = new Ajouter_UE(ec);
            Chaque_UE.cardPanel.add(edd,"ajouterecue");
            Accueil.card.show(Chaque_UE.cardPanel, "ajouterecue");
            
        }catch(SQLException e){
        e.printStackTrace();  
        }catch(NullPointerException e2){
            e2.printStackTrace();
        }
    }//GEN-LAST:event_AjouterEcueActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AjouterEcue;
    private javax.swing.JButton delete;
    private javax.swing.JButton deleteEcue;
    private javax.swing.JButton modifierEcue;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
