/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Entities.Etudiant;
import database.Connexion;
import database.EtudiantDAO;
import java.awt.Cursor;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
//import net.proteanit.sql.DbUtils;

/**
 *
 * @author Carlos SMY
 */
public class Panneau_Etudiant extends javax.swing.JPanel {

    /**
     * Creates new form Panneau_Etudiant
     */
     Connection conn;
    PreparedStatement statement;
    ResultSet resultat;
    public static Etudiant del;
    public static String imp;
          public static List<Etudiant> EtudiantListe = new java.util.ArrayList<Etudiant>();
    public Panneau_Etudiant() throws SQLException  {
        
        initComponents();
        moving3.setLayout(Accueil.card);
        //declaration des panels a ajouter dans moving2
        PanelPLus2 plus = new PanelPLus2();
        Ajouter_Etudiant aj = new Ajouter_Etudiant();
        moving3.add(plus,"pluse");
        moving3.add(aj,"ajouter_etudiant");
        conn= Connexion.Connecter();
        String query="SELECT numeroMatricule ,nom ,prenom, sexe ,dateNaissance,grade AS grade ,nomInstitut AS institut,numAnnee AS annee,numSemestre AS semestre "
                + " FROM etudiant,annee as an,semestre as sem,institut AS inst ,grade as gr "
                +  "WHERE idGrade=gr.id AND idInstitut=inst.id AND IdAnnee=an.id AND idSemestre=sem.id";
       statement = conn.prepareStatement(query);
        //Affichage(statement);
        newAffichage(statement);     
    }
    
            public void newAffichage(PreparedStatement statement){
        TableEtudiant.setModel(new javax.swing.table.DefaultTableModel(getinfo(statement),new String[]{"Matricule", "Nom", "Prénom(s)", "Sexe", "Date de Naissance", "Grade", "Institut","Année","Semestre"}) {
                    @Override
                    public boolean isCellEditable(int row, int colomn) {
                        return false;
                    }
                });
              
    }
    public  Object [][] afficher(List<Etudiant> liste){
        Object [][] data=new Object[liste.size()][9];
        for (Etudiant e:liste){
            int k=0;
             data[k][0] = e.getMatricule();
                data[k][1] = e.getNom();
                data[k][2] = e.getPrenom();
                data[k][4] = e.getDate_naissance().toString();
                data[k][5] = e.getGrade().getLibgrade();
                data[k][6] = e.getInstitut().getLibinstitut();
                data[k][7] = e.getAnnee().getLibannee();
                data[k][8]= e.getSemestre().getLibsemestre();
                data[k][9]= e.getSexe();
                k++;
            
        }
        
        return data;
        
    }
    
  
    public Object[][] getinfo(PreparedStatement statement) {
        int i = 0;
        int a = 0;
        int b = 1;
        int c = 0;

        Object[][] data = null;

        try {
           
           resultat=statement.executeQuery();
            //permet d'aller de la première ligne à la dernière ligne
            while (resultat.next()) {
                i++;
            }

            data = new Object[i][9];
            int k = 0;

            resultat.absolute(1);
            //vous positionner avant la première ligne de votre résultat
            resultat.beforeFirst();
            while (resultat.next()) {
                data[k][0] = resultat.getString("numeroMatricule");
                data[k][1] = resultat.getString("nom");
                data[k][2] = resultat.getString("prenom");
                data[k][3] = resultat.getString("sexe");
                data[k][4] = resultat.getDate("dateNaissance");
                data[k][5] = resultat.getString("grade");
                data[k][6] = resultat.getString("institut");
                data[k][7]= resultat.getString("annee");
                data[k][8]= resultat.getString(9);
                
                k++;

            }

        } catch (SQLException e) {
        }
        return data;
    }
    
   
    
    public void Affichage(PreparedStatement statement){
        try{
            resultat = statement.executeQuery();
            TableEtudiant.setModel(DbUtils.resultSetToTableModel(resultat));
        }catch(Exception e){
            System.out.println("Exception :"+e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelEtudiant = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableEtudiant = new javax.swing.JTable();
        TextField_rechercher = new javax.swing.JTextField();
        Bouton_Rechercher = new javax.swing.JButton();
        moving3 = new javax.swing.JPanel();

        labelEtudiant.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        labelEtudiant.setText("Etudiants");

        TableEtudiant.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        TableEtudiant.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Matricule", "Nom", "Prénom", "Sexe"
            }
        ));
        TableEtudiant.setGridColor(new java.awt.Color(255, 255, 255));
        TableEtudiant.setRowHeight(22);
        TableEtudiant.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableEtudiantMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                TableEtudiantMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                TableEtudiantMouseExited(evt);
            }
        });
        jScrollPane1.setViewportView(TableEtudiant);

        Bouton_Rechercher.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        Bouton_Rechercher.setText("Rechercher");
        Bouton_Rechercher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Bouton_RechercherMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Bouton_RechercherMouseExited(evt);
            }
        });
        Bouton_Rechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bouton_RechercherActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout moving3Layout = new javax.swing.GroupLayout(moving3);
        moving3.setLayout(moving3Layout);
        moving3Layout.setHorizontalGroup(
            moving3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
        );
        moving3Layout.setVerticalGroup(
            moving3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addComponent(labelEtudiant, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TextField_rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101)
                        .addComponent(Bouton_Rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)))
                .addComponent(moving3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(moving3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelEtudiant, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TextField_rechercher, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Bouton_Rechercher, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Bouton_RechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bouton_RechercherActionPerformed
        // TODO add your handling code here:
        String query = "SELECT numeroMatricule ,nom ,prenom, sexe ,dateNaissance,grade AS grade ,nomInstitut AS institut,numAnnee AS annee,numSemestre AS semestre "
                + " FROM etudiant,grade AS gr,institut AS inst,annee AS an,semestre AS sem "
                + "WHERE idGrade=gr.id AND idInstitut=inst.id AND IdAnnee=an.id AND idSemestre=sem.id AND nom like ? OR idGrade=gr.id AND idInstitut=inst.id AND IdAnnee=an.id AND idSemestre=sem.id AND numeroMatricule like ? ";
        PreparedStatement statement;
       try{ 
           statement= conn.prepareStatement(query);
            String str= "%"+TextField_rechercher.getText()+"%";
            statement.setString(1,str);
            statement.setString(2,str);
             Affichage(statement);
       }catch(SQLException ed){
           ed.getMessage();
           
       }


    }//GEN-LAST:event_Bouton_RechercherActionPerformed

    private void TableEtudiantMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableEtudiantMouseClicked
        // TODO add your handling code here:
      int count= evt.getClickCount();
      int row = TableEtudiant.rowAtPoint(evt.getPoint());
        String matricule = TableEtudiant.getValueAt(row, 0).toString();
        EtudiantDAO dao = new EtudiantDAO();
        Etudiant ue;
     try{
         ue = dao.find(matricule);;
         if (count==1){
             del=ue;
             imp=matricule;
         }
         if (count>=2){
           
        Chaque_Etudiant shaq = new Chaque_Etudiant(ue);
           Accueil.moving.add(shaq,"information");
            Accueil.card.show(Accueil.moving,"information");
        
          
      }
     }catch(SQLException e){
         e.printStackTrace();
     }
       
        
    }//GEN-LAST:event_TableEtudiantMouseClicked

    private void TableEtudiantMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableEtudiantMouseEntered
        // TODO add your handling code here:
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_TableEtudiantMouseEntered

    private void TableEtudiantMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableEtudiantMouseExited
        // TODO add your handling code here:
          this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_TableEtudiantMouseExited

    private void Bouton_RechercherMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Bouton_RechercherMouseEntered
        // TODO add your handling code here:
          this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_Bouton_RechercherMouseEntered

    private void Bouton_RechercherMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Bouton_RechercherMouseExited
        // TODO add your handling code here:
         this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_Bouton_RechercherMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bouton_Rechercher;
    private javax.swing.JTable TableEtudiant;
    private javax.swing.JTextField TextField_rechercher;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelEtudiant;
    public static javax.swing.JPanel moving3;
    // End of variables declaration//GEN-END:variables
}
